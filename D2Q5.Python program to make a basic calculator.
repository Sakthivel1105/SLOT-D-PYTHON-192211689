public class Solution {
    private Stack<int> st = new Stack<int>();
    public int Calculate(string s) {
        int num = 0;
        int lastOperand = 0;
        char op = '+';
        int res = 0;
        for (int i = 0; i < s.Length; i++) {
            char c = s[i];
            if (c == '+' || c == '-' || c == '*' || c == '/')
                op = c;
            else if (c >= '0' && c <= '9') {
                // accumulate digits in number
                num = num * 10 + (c - '0');
                // no more digits => trigger immediate calculation
                if (i == s.Length - 1 || s[i + 1] < '0' || s[i + 1] > '9') {
                    if (op == '+') {
                        lastOperand = num;
                        res += lastOperand;
                    }
                    else if (op == '-') {
                        lastOperand = -num;                        
                        res += lastOperand;
                    }
                    else if (op == '*') {
                        res -= lastOperand;
                        lastOperand *= num;
                        res += lastOperand;
                    }
                    else if (op == '/') {
                        res -= lastOperand;
                        lastOperand /= num;
                        res += lastOperand;
                    }
                    // we used the number we reset it to for further use
                    num = 0;                
                }
            }
        }
        
        return res;
    }
}
